<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.framework.module.article.dao.impl.InfArticleDao">

    <resultMap type="com.framework.module.article.domain.InfArticle" id="BaseResultMap">
        <id column="article_id" property="articleId"/>
        <result column="title" property="title"/>
        <result column="content" property="content"/>
        <result column="createTime" property="createTime"/>
        <result column="lastModifiedTime" property="lastModifiedTime"/>
    </resultMap>

    <!-- 表名 -->
    <sql id="tableNameSql">
        prd_inf_article
    </sql>
    <!-- 用于select查询、insert的公用抽取的列 -->
    <sql id="commonSelectColumnsPrefix">
        article_id,
        title,
        content,
        createTime,
        lastModifiedTime
    </sql>

    <insert id="save" parameterType="com.framework.module.article.domain.InfArticle">
        insert into <include refid="tableNameSql"/>(title,content,createTime,lastModifiedTime) values (#{title},#{content},#{createTime},#{lastModifiedTime})
    </insert>

    <sql id="mainSql">
        SELECT
        <include refid="commonSelectColumnsPrefix"/>
        FROM
        <include refid="tableNameSql"/>
        t
    </sql>

    <select id="findAll" parameterType="String" resultMap="BaseResultMap">
        <include refid="mainSql"/>
    </select>

    <!-- 按主键查找条件语句 -->
    <sql id="conditionOnlyId">
        article_id = #{articleId}
    </sql>

    <select id="findById" parameterType="Integer" resultMap="BaseResultMap">
        <include refid="mainSql"/>
        where <include refid="conditionOnlyId"/>
    </select>

    <update id="update" parameterType="com.framework.module.article.domain.InfArticle">
        update
        <include refid="tableNameSql"/>
        <set>
        <if test="title!=null and title!=''">title=#{title} ,</if>
        <if test="content!=null and content!=''">content=#{content},</if>
        <if test="lastModifiedTime!=null and lastModifiedTime!=''">lastModifiedTime=#{lastModifiedTime}</if>
        </set>
        where <include refid="conditionOnlyId"/>
    </update>

    <select id="findListBy" parameterType="java.util.Map" resultMap="BaseResultMap">
        <include refid="mainSql"/>
        <include refid="varSql"/>
        <if test="SORT != null and SORT != ''">
            order by ${SORT}
            <if test="DIR != null and DIR != ''">
                ${DIR}
            </if>
        </if>
    </select>

    <sql id="varSql">
        <where >
            <trim suffixOverrides="and">
                <!--
                   mybatis 中模糊查询 like #{name}  这种写法最后查询出来的数据是按照等值查的
                              模糊查询一共有三种方式：
                          like "%"#{name}"%"  推荐这种写法
                          like '%'||#{name}||'%'
                          like '%${name}%'
                          # 占位符，有防sql注入的功能   name=#{name}解析出来是 name=?
                          $ 代表解析动态变量     name=${name}  解析出来时name='yxkong'
                 -->
                <if test="creator!=null and creator!=''">and t.title=#{title} </if>
            </trim>
        </where>
    </sql>
</mapper>